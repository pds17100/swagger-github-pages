---
openapi: 3.0.1
info:
  title: 쇼핑몰 프로젝트 API
  description: 쇼핑몰 프로젝트 API 문서 입니다.
  version: v1.0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  "/api/members/update":
    put:
      tags:
      - member-api-controller
      operationId: updateMemberInfo
      parameters:
      - name: sessionId
        in: cookie
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MemberUpdateRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/MemberResponseDto"
  "/admin/items/{id}":
    put:
      tags:
      - admin-item-controller
      operationId: updateItem
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: integer
                format: int64
    delete:
      tags:
      - admin-item-controller
      operationId: deleteItem
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
  "/admin/discounts/{id}":
    put:
      tags:
      - admin-discount-controller
      operationId: updateDiscount
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DiscountRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/DiscountResponseDto"
    delete:
      tags:
      - admin-discount-controller
      operationId: deleteDiscount
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
  "/api/payments/complete":
    post:
      tags:
      - payment-api-controller
      operationId: completePayment
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PaymentCompleteRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/api/orders":
    post:
      tags:
      - order-api-controller
      operationId: createOrder
      parameters:
      - name: sessionId
        in: cookie
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/api/members/new":
    post:
      tags:
      - member-api-controller
      summary: 회원 가입
      description: 회원 가입 입니다.
      operationId: saveMember
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MemberRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/logout":
    post:
      tags:
      - login-api-controller
      operationId: logout
      parameters:
      - name: sessionId
        in: cookie
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/api/login":
    post:
      tags:
      - login-api-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/LoginResponseDto"
  "/api/cart":
    get:
      tags:
      - cart-api-controller
      operationId: getCartItems
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CartItemResponseDto"
    post:
      tags:
      - cart-api-controller
      operationId: addToCart
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AddCartItemRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/admin/new":
    post:
      tags:
      - admin-create-controller
      operationId: createAdmin
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AdminCreateDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/admin/members":
    get:
      tags:
      - admin-member-controller
      operationId: findMembers
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MemberResponseDto"
    post:
      tags:
      - admin-member-controller
      summary: admin에서 회원 가입
      description: admin에서 회원 가입 합니다.
      operationId: createMember
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MemberRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/MemberResponseDto"
  "/admin/items":
    get:
      tags:
      - admin-item-controller
      operationId: findItems_1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ItemResponseDto"
    post:
      tags:
      - admin-item-controller
      operationId: registerItemImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - categoryIds
              - image
              - item
              type: object
              properties:
                item:
                  "$ref": "#/components/schemas/ItemRequestDto"
                categoryIds:
                  type: array
                  items:
                    type: integer
                    format: int64
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ItemRegisterResponseDto"
  "/admin/discounts":
    post:
      tags:
      - admin-discount-controller
      operationId: registerDiscount
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DiscountRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/DiscountResponseDto"
  "/admin/categories":
    post:
      tags:
      - admin-category-controller
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CategoryRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: integer
                format: int64
  "/api/members/getMembers":
    get:
      tags:
      - member-api-controller
      operationId: getMembers
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MemberResponseDto"
  "/api/items":
    get:
      tags:
      - item-api-controller
      operationId: findItems
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageItemResponseDto"
  "/api/items/{itemId}":
    get:
      tags:
      - item-api-controller
      operationId: findItem
      parameters:
      - name: itemId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ItemResponseDto"
  "/api/items/latest":
    get:
      tags:
      - item-api-controller
      operationId: findLatestItems
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageItemResponseDto"
  "/api/items/discounted":
    get:
      tags:
      - item-api-controller
      operationId: findDiscountedItems
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PageItemResponseDto"
  "/admin/members/{id}":
    get:
      tags:
      - admin-member-controller
      operationId: findMember
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/MemberResponseDto"
    delete:
      tags:
      - admin-member-controller
      operationId: deleteMember
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
  "/admin/home/":
    get:
      tags:
      - admin-home-controller
      operationId: home
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/HomeResponseDto"
  "/admin/discounts/active":
    get:
      tags:
      - admin-discount-controller
      operationId: getDiscountedItems
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DiscountResponseDto"
  "/admin/categories/{categoryId}/items":
    get:
      tags:
      - admin-category-controller
      operationId: getItemsByCategory
      parameters:
      - name: categoryId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ItemResponseDto"
components:
  schemas:
    MemberUpdateRequestDto:
      type: object
      properties:
        address:
          type: string
        phone:
          type: string
    MemberResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
        email:
          type: string
        phone:
          type: string
        role:
          type: string
          enum:
          - USER
          - ADMIN
    ItemRequestDto:
      type: object
      properties:
        name:
          type: string
        price:
          type: integer
          format: int32
        stockQuantity:
          type: integer
          format: int32
        explains:
          type: string
        discountRate:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
    DiscountRequestDto:
      type: object
      properties:
        itemId:
          type: integer
          format: int64
        discountRate:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
    DiscountResponseDto:
      type: object
      properties:
        discountId:
          type: integer
          format: int64
        itemId:
          type: integer
          format: int64
        itemName:
          type: string
        discountRate:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        active:
          type: boolean
    PaymentCompleteRequestDto:
      type: object
      properties:
        impUid:
          type: string
        merchantUid:
          type: string
    MemberRequestDto:
      type: object
      properties:
        name:
          type: string
          description: 이름
          example: 박동수
        address:
          type: string
          description: 주소
          example: 구미
        email:
          type: string
          description: 이메일
          example: email@1256
        password:
          type: string
          description: 비밀번호
          example: password123
        phone:
          type: string
          description: 전화번호
          example: 010-1234-5678
    LoginRequestDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    LoginResponseDto:
      type: object
      properties:
        sessionId:
          type: string
        email:
          type: string
    AddCartItemRequestDto:
      type: object
      properties:
        itemId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
    AdminCreateDto:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
    ItemRegisterResponseDto:
      type: object
      properties:
        itemId:
          type: integer
          format: int64
        itemName:
          type: string
        message:
          type: string
    CategoryRequestDto:
      type: object
      properties:
        name:
          type: string
        parentId:
          type: integer
          format: int64
    ItemResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: integer
          format: int32
        stockQuantity:
          type: integer
          format: int32
        imageUrl:
          type: string
        explains:
          type: string
        discountRate:
          type: integer
          format: int32
        discountedPrice:
          type: integer
          format: int32
        discountActive:
          type: boolean
    PageItemResponseDto:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            "$ref": "#/components/schemas/ItemResponseDto"
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            "$ref": "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        pageable:
          "$ref": "#/components/schemas/PageableObject"
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          type: array
          items:
            "$ref": "#/components/schemas/SortObject"
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        direction:
          type: string
        nullHandling:
          type: string
        ascending:
          type: boolean
        property:
          type: string
        ignoreCase:
          type: boolean
    CartItemResponseDto:
      type: object
      properties:
        cartItemId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
        item:
          "$ref": "#/components/schemas/ItemResponseDto"
    CategoryResponseDto:
      type: object
      properties:
        name:
          type: string
        parentId:
          type: integer
          format: int64
    HomeResponseDto:
      type: object
      properties:
        categories:
          type: array
          items:
            "$ref": "#/components/schemas/CategoryResponseDto"
        items:
          type: array
          items:
            "$ref": "#/components/schemas/ItemResponseDto"
